fzf
cd .config/river
v
./init
man riverctl
cd .config/river
n
./init
lsblk
clear
lsblk
clear
neofetch
clear
ll
la
clear
v
lsblk
clear
neofetch
clear
ll
clear
neofetch
nitch
clear
n
v
cmatrix
ll
lslbk
clear
lsblgk
claer
neofetch
clear
clear
n
cd wallpaper
n
n
ll
clear
lslkj
clear
lsblk
clear
neofetch
clear
n
cd .config/river
v
./init
./init
./init
./init
n
./init
./init
./init
./init
./init
./init
./init
./init
./init
./init
./init
./init
./init
gimp
cd .config/river
n
gimp
./init
lsblk
clear
lsblk
clear
tt
lsblk
clear
cd wla
n
lsblk
clear
clear
./init
./init
n
q
x
./init
./init
x
cd .config/river
v
hn
n
cd
cd .config/river
cv
v
man riverctl
cd .config/river
v
v
./init
./init
btop
swaymsg
exec swaymsg
exec swaymsg -q "exec --no-startup-id $(compgen -c | fzf $OPTS | tail -1)"\

river
river
river
river
river
river
cd .config/river
v
tldr alacritty
man alacritty
n
./init
clear
n
n
snd
n
lsblk
clear
cd .config/ala
cd .config/alacritty
v
cd .config/river
v
v
./init
n
./init
./init
n
cd .config/river
v
./init
OPTS='--info=inline --print-query --bind=ctrl-space:print-query,tab:replace-query'\
exec swaymsg -q "exec --no-startup-id $(compgen -c | fzf $OPTS | tail -1)"\

OPTS='--info=inline --print-query --bind=ctrl-space:print-query,tab:replace-query'\
exec swaymsg -q "exec --no-startup-id $(compgen -c | fzf $OPTS | tail -1)"\

OPTS='--info=inline --print-query --bind=ctrl-space:print-query,tab:replace-query'\
\


OPTS='--info=inline --print-query --bind=ctrl-space:print-query,tab:replace-query'\
\


exec --no-startup-id $(compgen -c | fzf $OPTS | tail -1)
compgen -c
exec --no-startup-id $(compgen -c | fzf --info=inline --print-query --bind=ctrl-space:print-query,tab:replace-query | tail -1)
exec --no-startup-id firefox
alacritty exec 
firefox
firefox &
firefox & disown
exec firefox
exec firefox
exec --no-startup-id firefox
exec firefox
exec $(compgen -c | fzf $OPTS | tail -1)
exec swaymsg -q "exec --no-startup-id $(compgen -c | fzf $OPTS | tail -1)"\

swaymsg
exec swaymsg
riverctl spawn firefox
man riverctl
man swaymsg
n
cd .dotfiles
n
yay river
yay river-tag
river-tag-overlay
btio
btop
kill
pkill
cd .config/river
v init
./init
killall -SIGUSR1 waybar
man river-tag-overlay
cd .config/river
v
riverctl map normal Super B spawn "killall -SIGUSR1 waybar"\

killall -SIGUSR1 waybar
killall -SIGUSR1 waybar
killall -SIGUSR1 waybar
killall -SIGUSR1 waybar
killall -SIGUSR1 waybar
killall -SIGUSR1 waybar
killall -SIGUSR1 waybar
killall -SIGUSR1 waybar
killall -SIGUSR1 waybar
killall -SIGUSR1 waybar
killall -SIGUSR1 waybar
s
river
cd /opt/lampp/htdocs/realestate
gs
lsblk
clear
n
n
cd movies
v
n
n
snd
mpv version 
mpv --version 
clear
add ffmpeg
clear
pip install --upgrade ffsubsunc
pip install --upgrade ffsubsync
git clone 'https://github.com/Ajatt-Tools/autosync-mpv' ~/.config/mpv/scripts/autosubsync
$ git clone 'https://github.com/Ajatt-Tools/autosubsync-mpv' ~/.config/mpv/scripts/autosubsync
git clone 'https://github.com/Ajatt-Tools/autosubsync-mpv' ~/.config/mpv/scripts/autosubsync
n
btop
snd
xprop
wlprop
add wlprop
wlprop
add jq
add slurp
add awk
curl -L https://gist.github.com/crispyricepc/f313386043395ff06570e02af2d9a8e0/raw/8b06f025a0f34685f5ffc2000fd19a64754c9b29/wlprop.sh > ~/.local/bin/wlprop\
chmod +x ~/.local/bin/wlprop
n
chmod +x ~/.local/bin/wlprop
wlprop
./.local/bin/wlprop
./.local/bin/wlprop
btop
yay wlprop
yay wlprop
wlprop
wlprop
cd .config/river
v
swaymsg -t get_tree
swaymsg -t get_tree
swaymsg -t get_tree
swaymsg -t get_tree
clear
cd .config/river
 v
./init
kill
kill 14893
riverctl float-filter-add app-id "kdeconnect-app"\

xprop
wlprop
cd .local/bin
n
slurp
s
river
btop
lslbk
lsblk
clear
n
figlet riverwm
showconsolefont
showconsolefont hello
showfigfonts RiverWM
rivertile -view-padding 6 -outer-padding 2 -main-ratio 0.5 -main-location left\

riverctl default-layout rivertile\
rivertile -view-padding 6 -outer-padding 2 -main-ratio 0.5 -main-location left\

n
n
cd .config/river
v init
killall waybar
killall waybar
cd .config/river
n
waybar
cd ../river
./init
man waybar
./init
./init
n
killall waybar
n
./init
./init
./init
./init
n
cp Downloads/
n
lsblk
clear
lsblk
clear
neofetch
clear
cmatrix
neofetch
clear
add swww
yay swww
clear
add lz4
clar
clear
swww init
swww img wallpaper/downloads/anim_1.gif
btop
s
river
river
river
cd .config/river
v
n
killall waybar
./init
add eww
yay eww
eww
eww daemon
cd .config
mkdir eww
eww daemon
cd
git clone https://github.com/rxyhn/tokyo
n
eww daemon
n
clera
eww daemon
eww open
eww open hello
n
cd .config/eww
v
eww open bar
eww daemon
eww open bar
eww open bar
eww open launcher
eww open launcher []
eww open launcher[]
eww open bar
eww
eww --restart
eww daemon
eww --restart
eww windows
eww windows
cd .config
n
clear
n
cd
n
s
river
v
eww daemon
eww wi
eww windows
eww windows
edd
eww
eww windows *
eww windows 
eww windows bar
eww reload
eww reload
eww reload
eww bar
eww 
eww open bar
neofetch
clear
cd .config
cd
remove eww
yay -R eww
yay -R eww-wayland
n
clear
n
cd .dotfiles
gs
ga -A
gs
gc -m "first commit"
gp
n
n
riverctl map normal Super P spawn "grim -g $(slurp -d)"\

riverctl map normal Super P spawn "grim -g $(slurp -d)"\

grim
n
grim
n
v
n
cd .config/river
v
riverctl map normal Super P "grim -g $(slurp -d)"\

riverctl map normal Super P "grim -g $(slurp -d)"\

riverctl map normal Super P "grim -g $(slurp -d)"\

riverctl map normal Super+P "grim -g $(slurp -d)"\

riverctl map normal Super+P "grim -g \"$(slurp -d)\""\

riverctl map normal Super+P "grim -g '$(slurp -d)'"\

riverctl map normal Super+P "grim -g $(slurp -d)'"\

riverctl map normal Super+P spawn "grim -g $(slurp -d)"\

riverctl map normal Super P spawn "grim -g $(slurp -d)"\

grim
echo 'Enter the number'\
read limit\
echo 'Prime Number are : '\
for (( i=2; i<=limit; i++ ))\
do\
    flag=0\
    for (( j=i-1; j>1; j-- ))\
    do \
        val=$(($i%$j))\
        if [ $val -eq 0 ]\
        then\
            flag=1\
        fi\
    done\
    if [ $flag -eq 0 ]\
    then\
        echo "$i"\
    fi\
done\

echo 'Enter the number'\
read limit\
echo 'Prime Number are : '\
for (( i=2; i<=limit; i++ ))\
do\
    flag=0\
    for (( j=i-1; j>1; j-- ))\
    do \
        val=$(($i%$j))\
        if [ $val -eq 0 ]\
        then\
            flag=1\
        fi\
    done\
    if [ $flag -eq 0 ]\
    then\
        echo "$i"\
    fi\
done\

echo 'Enter the number'\
read limit\
echo 'Prime Number are : '\
for (( i=2; i<=limit; i++ ))\
do\
    flag=0\
    for (( j=i-1; j>1; j-- ))\
    do \
        val=$(($i%$j))\
        if [ $val -eq 0 ]\
        then\
            flag=1\
        fi\
    done\
    if [ $flag -eq 0 ]\
    then\
        echo "$i"\
    fi\
done\

grim
n
n
s
river
poweroff
./init
WALLPAPER="$HOME/wallpaper/downloads/uplspash_sky_2.jpg"\
swaybg -o eDP-1 -i "$WALLPAPER" -o HDMI-A-1 -i "$WALLPAPER" &\

WALLPAPER="$HOME/wallpaper/downloads/uplspash_sky_3.jpg"\
swaybg -o eDP-1 -i "$WALLPAPER" -o HDMI-A-1 -i "$WALLPAPER" &\

WALLPAPER="$HOME/wallpaper/downloads/uplspash_sky_4.jpg"\
swaybg -o eDP-1 -i "$WALLPAPER" -o HDMI-A-1 -i "$WALLPAPER" &\

WALLPAPER="$HOME/wallpaper/downloads/uplspash_sky_5.jpg"\
swaybg -o eDP-1 -i "$WALLPAPER" -o HDMI-A-1 -i "$WALLPAPER" &\

WALLPAPER="$HOME/wallpaper/downloads/uplspash_sky_6.jpg"\
swaybg -o eDP-1 -i "$WALLPAPER" -o HDMI-A-1 -i "$WALLPAPER" &\

WALLPAPER="$HOME/wallpaper/downloads/uplspash_sky_1.jpg"\
swaybg -o eDP-1 -i "$WALLPAPER" -o HDMI-A-1 -i "$WALLPAPER" &\

cd wallpaper/downloads
ll
tldr grim
man grim
n
slurp
slurp | grim
n
slurp | grim
slurp | grim -g
n
slurp | grim -g -
n
slurp | grim -g - $(xdg-user-dir screenshots)/$(date +'screenshot_%Y-%m-%d-%H%M%S.png')
n
slurp | grim -g - screenshots/$(date +'screenshot_%Y-%m-%d-%H%M%S.png')
n
wew
wev
man riverctl
wpg
add wpg
yay wpg
add wbg
yay wbg
man wbg
tldr wbg
clear
wpg wallpaper/space_wallhaven.jpg
wbg wallpaper/space_wallhaven.jpg
clear
wev
n
lsblk
clear
neofetch
clear
cmatrix
add wob
yay wob
wob
wob
systemctl enable --now --user wob.socket
cp contrib/systemd/wob.{service,socket} ~/.local/share/systemd/user/\
systemctl daemon-reload --user
notify-send -a System \\
                -i "$YOUR_ICON_PACK_PATH/volume.svg" \\
                -h string:wired-tag:system \\
                -h int:value:69 \\
                "Volume"
add wired
yay wired
cd
clear
add dbus cairo pango glib2 xss
notify-send -a System \\
                -i "$YOUR_ICON_PACK_PATH/volume.svg" \\
                -h string:wired-tag:system \\
                -h int:value:69 \\
                "Volume"
notify-send -a System \\
                -i "$YOUR_ICON_PACK_PATH/volume.svg" \\
                -h string:wired-tag:system \\
                -h int:value:69 \\
                "Volume"
notify-send -a System \\
                -i "$YOUR_ICON_PACK_PATH/volume.svg" \\
                -h string:wired-tag:system \\
                -h int:value:69 \\
                "Volume"
notify-send "fdasdf"
notify-send "fdasdf"
notify-send "fdasdf"
notify-send -a System \\
                -i "$YOUR_ICON_PACK_PATH/volume.svg" \\
                -h string:wired-tag:system \\
                -h int:value:69 \\
                "Volume"
notify-send -a System \\
                -i "$YOUR_ICON_PACK_PATH/volume.svg" \\
                -h string:wired-tag:system \\
                -h int:value:69 \\
                "Volume"
wired
pamixer --get-volume-human
notify-send -a System \\
                -i "$YOUR_ICON_PACK_PATH/volume.svg" \\
                -h string:wired-tag:system \\
                -h int:value:69 \\
                "Volume"
notify-send -a System \\
                -i "$YOUR_ICON_PACK_PATH/volume.svg" \\
                -h string:wired-tag:system \\
                -h int:value:69 \\
                "Volume"
man notify-send
notify-send -a System \\
                -i "$YOUR_ICON_PACK_PATH/volume.svg" \\
                -h string:wired-tag:system \\
                -h int:value:69 \\
                "Volume"
notify-send -a System \\
                -i "$YOUR_ICON_PACK_PATH/volume.svg" \\
                -h string:wired-tag:system \\
                -h int:value:69 \\
                "Volume"
notify-send -a System \\
                -i "$YOUR_ICON_PACK_PATH/volume.svg" \\
                -h string:wired-tag:system \\
                -h int:value:69 \\
                "Volume"
notify-send -a System \\
                -i "$YOUR_ICON_PACK_PATH/volume.svg" \\
                -h string:wired-tag:system \\
                -h int:value:100 \\
                "Volume"
notify-send -a System \\
                -i "$YOUR_ICON_PACK_PATH/volume.svg" \\
                -h string:wired-tag:system \\
                -h int:value:$(pamixer --get-volume-human) \\
                "Volume"
notify-send -a System \\
                -i "$YOUR_ICON_PACK_PATH/volume.svg" \\
                -h string:wired-tag:system \\
                -h int:value:$(pamixer --get-volume-human) \\
                "Volume"
notify-send -a System \\
                -i "$YOUR_ICON_PACK_PATH/volume.svg" \\
                -h string:wired-tag:system \\
                -h int:value:$(pamixer --get-volume-human) \\
                "Volume"
notify-send -a System \\
                -i "$YOUR_ICON_PACK_PATH/volume.svg" \\
                -h string:wired-tag:system \\
                -h int:value:$(pamixer --get-volume-human) \\
                "Volume"
notify-send -a System \\
                -i "$YOUR_ICON_PACK_PATH/volume.svg" \\
                -h string:wired-tag:system \\
                -h int:value:$(pamixer --get-volume-human) \\
                "Volume"
notify-send -a System \\
                -i "$YOUR_ICON_PACK_PATH/volume.svg" \\
                -h string:wired-tag:system \\
                -h int:value:$(pamixer --get-volume-human) \\
                "Volume"
notify-send -a System \\
                -i "$YOUR_ICON_PACK_PATH/volume.svg" \\
                -h string:wired-tag:system \\
                -h int:value:$(pamixer --get-volume-human) \\
                "Volume"
notify-send -a System \\
                -i "$YOUR_ICON_PACK_PATH/volume.svg" \\
                -h string:wired-tag:system \\
                -h int:value:$(pamixer --get-volume-human) \\
                "Volume"
notify-send -a System \\
                -i "$YOUR_ICON_PACK_PATH/volume.svg" \\
                -h string:wired-tag:system \\
                -h int:value:$(pamixer --get-volume-human) \\
                "Volume"
notify-send -a System \\
                -i "$YOUR_ICON_PACK_PATH/volume.svg" \\
                -h string:wired-tag:system \\
                -h int:value:$(pamixer --get-volume-human) \\
                "Volume"
notify-send -a System \\
                -i "$YOUR_ICON_PACK_PATH/volume.svg" \\
                -h string:wired-tag:system \\
                -h int:value:$(pamixer --get-volume-human) \\
                "Volume"
notify-send -a System \\
                -i "$YOUR_ICON_PACK_PATH/volume.svg" \\
                -h string:wired-tag:system \\
                -h int:value:$(pamixer --get-volume-human) \\
                "Volume"
notify-send -a System \\
                -i "$YOUR_ICON_PACK_PATH/volume.svg" \\
                -h string:wired-tag:system \\
                -h int:value:$(pamixer --get-volume-human) \\
                "Volume"
notify-send -a System \\
                -i "$YOUR_ICON_PACK_PATH/volume.svg" \\
                -h string:wired-tag:system \\
                -h int:value:$(pamixer --get-volume-human) \\
                "Volume"
wired
n
lsblk
sudo mount /dev/sdb1 /mnt/sd
sudo mount /dev/sda1 /mnt/sd
cd /mnt
cd sd
n
cp -r ~/Downloads/IVreport/ .
n
sudo n
sudo cp -r ~/Downloads/IVreport/ .
n
eject -T
eject /mnt
man eject
sudo umount /mnt
sudo umount /mnt/sd
man notify-send
VOL_NOTIFY="notify-send -a System -h string:wired-tag:system \\
           -h int:value:$(pamixer --get-volume-human) -t 1800 \"Volume\""\

pamixer -d 5 && $VOL_NOTIFY
VOL_NOTIFY="notify-send -a System -h string:wired-tag:system \\
           -h int:value:$(pamixer --get-volume-human) -t 1800 'Volume'"\

pamixer -d 5 && $VOL_NOTIFY
pamixer -d 5 && $VOL_NOTIFY
pamixer -d 5 && $VOL_NOTIFY
pamixer -d 5 && $VOL_NOTIFY
notify-send -a System -h string:wired-tag:system            -h int:value:0% -t 1800 'Volume'
cd .config/river
n
cd 
cd .config/river
v
./init
./init
./init
./init
./init
./init
./init
./init
./init
./init
grim -g - ~/screenshots/$(date +'screenshot_%Y-%m-%d-%H%M%S.png')
grim ~/screenshots/$(date +'screenshot_%Y-%m-%d-%H%M%S.png')
./init
./init
./init
./init
./init
./init
./init
./init
./init
./init
./init
./init
clear
river-tag-overlay
n
./init
./init
./init
./init
./init
./init
./init
./init
./init
./init
./init
./init
./init
./init
./init
./init
./init
./init
./init
brightnessctl
man brightnessctl
brightnessctl get
brightnessctl get
brightnessctl get
brightnessctl get
brightnessctl get
]
]
brightnessctl get
]
brightnessctl get
brightnessctl get
brightnessctl get
brightnessctl get
man brightnessctl
man notify-send
brightnessctl m
brightnessctl g
brightnessctl g %
brightnessctl g 
echo $(brightnessctl g)
echo "$(brightnessctl g)/255 * 100
echo "$(brightnessctl g)/255 * 100"
echo "$(brightnessctl g)/255 * 100" | bc
echo "$(brightnessctl g)/255 * 100" | bc
echo "$(brightnessctl g)/255 * 100" | bc
echo "$(brightnessctl g)/255 * 100" | bc
echo "$(brightnessctl g)/255 * 100" | bc
echo "$(brightnessctl g)/255 * 100" | bc
echo "$(brightnessctl g)/255 * 100" | bc
echo "$(brightnessctl g)/255 * 100" | bc
echo "$(brightnessctl g)/100 * 255" | bc
echo "$(brightnessctl m)/100 * $(brightnessctl g)" | bc
echo "$(brightnessctl m)/100 * $(brightnessctl g)"
echo "$(brightnessctl g)/255 * 100" | bc
echo "130/255" | bc
echo "13000/255 | bc
echo "13000/255 | bc "
echo "13000/255" | bc
echo "14000/255" | bc
echo "14000/255" | bc
echo "140/255" | bc
echo "(140*100)/255" | bc
echo "$(brightnessctl g)*100 / 255" | bc
echo "$(brightnessctl g)*100 / 255" | bc
echo "$(brightnessctl g)*100 / 255" | bc
echo "$(brightnessctl g)*100 / 255" | bc
echo "$(brightnessctl g)*100 / 255" | bc
echo "$(brightnessctl g)*100 / 255" | bc
echo "$(brightnessctl g)*100 / 255" | bc
notify-send -a System \\
  -h string:wired-tag:system -h int:value:$(brightnessctl get) -t 1800 "Brightness"
notify-send -a System \\
  -h string:wired-tag:system -h int:value:$(brightnessctl get) -t 1800 "Brightness"
notify-send -a System \\
  -h string:wired-tag:system -h int:value:$(brightnessctl get) -t 1800 "Brightness"
notify-send -a System \\
  -h string:wired-tag:system -h int:value:$(brightnessctl get) -t 1800 "Brightness"
notify-send -a System \\
  -h string:wired-tag:system -h int:value:"hello" -t 1800 "Brightness"
notify-send -a System \\
  -h string:wired-tag:system -h int:value:"hello" -t 1800 "Brightness"
notify-send -a System \\
  -h string:wired-tag:system -h int:value:"hello" -t 1800 "Brightness"
notify-send -a System \\
  -h string:wired-tag:system -h int:value:10 -t 1800 "Brightness"
notify-send -a System \\
  -h string:wired-tag:system -h int:value:$(brightnessctl get) -t 1800 "Brightness"
notify-send -a System \\
  -h string:wired-tag:system -h int:value:$(echo "$(brightnessctl get)) -t 1800 "Brightness"
notify-send -a System \\
  -h string:wired-tag:system -h int:value:$(echo "$(brightnessctl get))" -t 1800 "Brightness"
notify-send -a System \\
  -h string:wired-tag:system -h int:value:$(echo $(brightnessctl get)) -t 1800 "Brightness"
notify-send -a System \\
  -h string:wired-tag:system -h int:value:$(echo $(brightnessctl get+5)) -t 1800 "Brightness"
notify-send -a System \\
  -h string:wired-tag:system -h int:value:$(echo $(brightnessctl get-100)) -t 1800 "Brightness"
notify-send -a System \\
  -h string:wired-tag:system -h int:value:$(brightnessctl get) -t 1800 "Brightness"
notify-send -a System \\
  -h string:wired-tag:system -h int:value:$(brightnessctl get) -t 1800 "Brightness"
notify-send -a System \\
  -h string:wired-tag:system -h int:value:$(brightnessctl get) -t 1800 "Brightness"
notify-send -a System \\
  -h string:wired-tag:system -h int:value:$(echo $(brightnessctl get)) -t 1800 "Brightness"
notify-send -a System \\
  -h string:wired-tag:system -h int:value:$(echo $(brightnessctl get)) -t 1800 "Brightness"
notify-send -a System \\
  -h string:wired-tag:system -h int:value:$(echo $(brightnessctl get)+3) -t 1800 "Brightness"
notify-send -a System \\
  -h string:wired-tag:system -h int:value:$(echo $(brightnessctl get)+300) -t 1800 "Brightness"
notify-send -a System \\
  -h string:wired-tag:system -h int:value:$(echo $(brightnessctl get)+300 | bc) -t 1800 "Brightness"
notify-send -a System \\
  -h string:wired-tag:system -h int:value:$(echo $(brightnessctl get)*100 / 255 | bc) -t 1800 "Brightness"
notify-send -a System \\
  -h string:wired-tag:system -h int:value:$(echo $(brightnessctl get)00 / 255 | bc) -t 1800 "Brightness"
notify-send -a System \\
  -h string:wired-tag:system -h int:value:$(echo $(brightnessctl get)00 / 255 | bc) -t 1800 "Brightness"
notify-send -a System \\
  -h string:wired-tag:system -h int:value:$(echo $(brightnessctl get)00 / 255 | bc) -t 1800 "Brightness"
notify-send -a System \\
  -h string:wired-tag:system -h int:value:$(echo $(brightnessctl get)00 / 255 | bc) -t 1800 "Brightness"
notify-send -a System \\
  -h string:wired-tag:system -h int:value:$(echo $(brightnessctl get)00 / 255 | bc) -t 1800 "Brightness"
  alias brightness_status='notify-send -a System \\
  -h string:wired-tag:system -h int:value:$(echo $(brightnessctl get)00 / 255 | bc) -t 1800 "Brightness"'\

brightness_status
brightness_status
echo blah && brightness_status
riverctl spawn firefox
riverctl spawn "echo hello"
riverctl spawn "alacritty -e cmatrix"
riverctl spawn "alacritty -e cmatrix" && firefox
riverctl spawn "alacritty -e cmatrix" firefox
riverctl spawn "alacritty -e cmatrix firefox"
riverctl spawn "alacritty -e cmatrix && $(echo hellop)"
riverctl spawn "alacritty -e cmatrix && $(alacritty -e echo 'balh')"
riverctl spawn "alacritty -e cmatrix && $(alacritty -e echo 'balh')"
riverctl spawn "alacritty -e cmatrix firefox"
VOLUME_TOGGLE='notify-send -a System \\
    -h string:wired-tag:system \
    -t 1800 "Volume $(pamixer --get-volume-human)"'\

$VOLUME_TOGGLE
cd .config/river
v
./init
./init
./init
./init
./init
./init
./init
./init
./init
./init
./init
./init
./init
v .zshrc
cmatrix
cd .config/alacritty
v
cmatrix
clear
v
lslbk
clear
lslkb
clear
lslkb
clear
lsblk
clear
cd .config/river
v
n
killall waybar
waybar
killall waybar && waybar
waybar
lsblk
cd .config/river
v
v .zshrc
./init
./init
waybar
lslkb
clear
tt
yay wl-color-picker
wl-color-picker
wl-color-picker
wl-color-picker
wl-color-picker
cd .config/waybar
v
killall waybar && waybar
killall waybar && waybar
waybar
waybar
waybar
waybar
waybar
waybar
waybar
waybar
waybar
waybar
waybar
waybar
waybar
waybar
waybar
waybar
waybar
waybar
waybar
waybar
waybar
waybar
waybar
waybar
waybar
waybar
waybar
waybar
cd .config/alacritty
v
wired
cd .config/river
v init
s
river
lsbkl
cd .config/river
v
cd .config/river
v
river
river
river
poweroff
lslbk
clear
lsblk
clear
s
river
river
river
s
river
river
./test/fzf-scripts/wifi
nmcli
nmcli
nmcli
nmcli
nmcli
nmcli
nmcli
nmcli
nmcli
nmcli device show
nmcli device show
./test/fzf-scripts/wifi
reboot
lsblk
clear
n
cmatrix
neofetch
cear
clear
s
river
lsbl
lsblk
clear
neofetch
clear
add node
add nodejs
clear
sh -c "$(curl -sSfL https://release.solana.com/v1.15.2/install)"
export PATH="/home/daison/.local/share/solana/install/active_release/bin:$PATH"
s
river
river
neofethc
neofetch
clera
nitch
clear
nitch
tt
s
river
poweroff
add qalculate-qt
qalc
n
lslbk
lsblk
clear
yay Calibri
s
river
snd
add chromium
add brave
yay brave
s
river
cd .config/river
v
lsblk
clear
v
lsblk
clear
lsblk
clear
n
n
cd .config/river
v
s
ver
river
poweroff `
poweroff
cd .config/river
v
lsblk
clear
n
n
s
n
clear
river
s
river
poweroff
sudo mount /dev/sda1 /mnt/sd
cd /mnt/sd
cd project
cd final_diagrams/drawio_file
ll
cp dfd_level_1_admin.drawio dfd_level_1_user.drawio ~/Downloads
n
sudo umount /mnt/sd
snd
sudo mount /dev/sda1 /mnt/sd
n
sudo umount /mnt/sd
snd
cd Downloads/open_course_selection_system/png
snd
hto
ntop
btop
cd projects/solana/solana-intro-frontend
ll
clear
ll
tt
npm install
clear
git checkout started
git checkout starter
cd projects/solana/solana-intro-frontend
v
cd projects/solana/solana-intro-frontend
ll
clear
n
v
 v
cd..
cd ..
gs
rm -r solana-intro-frontend
ll
rmdir solana-intro-frontend
rm -R solana-intro-frontend
n
n
gs
clear
git clone https://github.com/buildspace/solana-intro-frontend.git
cd solana-intro-frontend
git checkout starter
npm i
npm run dev
vb
2n
cd .vimwiki
ll
n
setxkbmap -option "caps:swapescape"
n
cd .vimwiki
v
n
river
n
cd .vimwiki
n
cd projects
ll
mkdir solana
cd solana
git clone https://github.com/buildspace/solana-intro-frontend.git
cd solana-intro-frontend
ll
clear
ll
v
v
v
#
cat .zsh_history
v .zsh_history
wmname LG3D
v
cd .config/alacritty
v
lsblk
clear
cd .config/alacritty
v
lsblk
clear
sudo xampp start
clear
cd sem6/lab
v
snd
snd
s
river
wmname LG3D
cd screenshots
snd
snd
cmatrix
btop
i="y"\
s=0\
echo "Enter the first number : "\
read a\
echo "Enter the second number : "\
read b\
while [ $i = "y" ]\
do\
    echo "Select the operation you want to perform : "\
    echo "1)add  2)subtract  3)multiply  4)divide"\
    read c\
    case $c in\
    1) echo "Sum = $(($a+$b))" ;;   \
    2) echo "Difference = $(($a-$b))" ;;\
    3) echo "Product = $(($a*$b))" ;;\
    4) echo "Quotient = $(($a/$b))" ;;\
    5) echo "Invalid Option"\
       exit ;;\
    esac\
    echo "Do you want to continue?"\
    read i\
    if [ $i != "y" ]\
    then\
        exit\
    fi\
done\

cd sem6/lab/android
n
s
rier
river
wmname LG3D
echo 'Enter number'\
read a\
fact=1\
for (( i=1; i<=$a; i++ ))\
do\
fact=$(($fact*$i))\
done\
echo "factorial : $fact"\

echo 'Enter number'\
read a\
r=0\
while [ $a -ne 0 ] \
do\
d=$(( $a%10 ))\
r=$(( ($r*10)+$d ))\
a=$(( $a/10 ))\
done\
echo "reverse = $r"\

echo 'Enter the number'\
read number\
if [ $rem -eq 0 ]\
then    \
    echo "$number is an Even Number"\
else\
    echo "$number is an Odd Number"\
fi\

echo 'Enter the number'\
read number\
if [ $rem -eq 0 ]\
then    \
    echo "$number is an Even Number"\
else\
    echo "$number is an Odd Number"\
fi\

sqrt(5)
echo sqrt(5)
echo "sqrt(5)"
echo "sqrt(5)" | bc
date
date +%h
date +%H
rev "sdfa"
echo "blah" | rev
river
cd sem6/lab/android
n
lsblk
sudo mount /dev/sda1 /mnt/sd
ll
clear
ls
clear
n
sudo r
sudo umount /mnt/sd
lsblk
clear
neofetch
clear
sudo xampp start
cd Downloads
snd
snd
add wayfire
yay wayfire
yay wayfire
add enlightenment
enlightenment
solana --version
clear
anchor --version
cargo install --git https://github.com/coral-xyz/anchor avm --locked --force
avm install latest
add pkg-config
add avm
avm
yay avm
add pkg-config build-essential libudev-dev libssl-dev
npm install avm
update
clear
anchor
cargo install --git https://github.com/coral-xyz/anchor avm --locked --force
avm 
cd .cargo/bin
ll
./avm install latest
cd
avm use latest
cd .cargo/bin
avm use latest
./avm use latest
./anchor --version
clear
river
ccccriver
river
enlightenment_start
river
poweroff
waybar
cd .config/river
v
n
cd projects/assets/fireship_navbar
n
n
neofetch
clear
cmatrix
btop
lsblk
clear
n
cd .config/river
v
wbg wallpaper/downloads/uplspash_sky_2.jpg
wbg wallpaper/downloads/uplspash_sky_5.jpg
wbg wallpaper/downloads/uplspash_sky_6.jpg
wbg wallpaper/downloads/uplspash_sky_2.jpg
wbg wallpaper/downloads/uplspash_sky_1.jpg
cxlear
clear
cd .config/river
v
swww img wallpaper/downloads/anim_1.gif
swww init
lsblk
clear
./testl
./test/fzf-scripts/wifi
./test/fzf-scripts/wifi
./test/fzf-scripts/wifi
nmcli
s
river
river
river
river
sudo xampp start
./test/fzf-scripts/wifi
./test/fzf-scripts/wifi
./test/fzf-scripts/wifi
clear
./test/fzf-scripts/wifi
./test/fzf-scripts/wifi
./test/fzf-scripts/wifi
./test/fzf-scripts/wifi
./test/fzf-scripts/wifi
./test/fzf-scripts/wifi
./test/fzf-scripts/wifi
./test/fzf-scripts/wifi
nmcli
cd /opt/lampp/htdocs/realestate
ll
v
gs
ga -A
gc -m "updated admin"
gp
clear
lsblk
clear
neofetch
n
jn
n
cd /opt/lampp/htdocs/realestate
v
./test/fzf-scripts/wifi
./test/fzf-scripts/wifi
./test/fzf-scripts/wifi
cd projects
ll
cd tsnake
ll
./tsnake
clear
cp tsnake ~/.local/bin
tsnake
clear
cd
tsnake
cd .local/bin
n
./tsnak
./tsnake
cd .local/bin
ll
tsnake
./tsnake
clear
chmod +x tsnake
tsnake
clear
tsnake
clear
n
sudo mv .local/bin/tsnake /usr/share
cd /usr/share
ll
mv tsnake /bin
sudo mv tsnake /bin
tsnake
n
s
river
s
river
clear
clear
cat .dotfiles/scripts/yay_packages.md
yay -s $(cat .dotfiles/scripts/yay_packages.md)
man yay
yay -S $(cat .dotfiles/scripts/yay_packages.md)
sudo systemctl start NetworkManager-dispatcher.service
sudo systemctl start NetworkManager-wait-online.service
almixer
amixer
alsamixer
add
add $(cat .dotfiles/scripts/pacman_packages.md)
add bat
add $(cat .dotfiles/scripts/pacman_packages.md)
clear
river
cd /opt
sudo git clone https://aur.archlinux.org/yay-git.git
sudo chown -R daison:daison ./yay-git
cd yay-git
makepkg -si
cd
clear
yay blex
river
poweroff
add mesa
add zsh-autosuggestions
neofetch
neofetch
clear
where zsh-autosufestions
where zsh-autosugestions
which zsh
which zsh-autosugestions
clear
n
v
nnn
cd .dotfiles
ll
cd scripts
ll
yay -Sy $(cat yay_packages.md)
n
add wired
yay wired
clear
add lazygit
lazygit
cd .dotfiles
lazygit
lazygit
mkdir test
git clone https://github.com/daisonth/.dotfiles.git
cd test
git clone https://github.com/daisonth/.dotfiles.git
gs
cd .dotfiles
ll
clear
git revert 9484071
n
git revert --skip 9484071
git checkout 9484071
n
git revert --no-commit 9484071..HEAD
n
git reset --hard 9484071 && git clean -f
n
cd
clear
cd .dotfiles
gs
clear
yay packer
yay packer.nvim
yay packernvim
yay packer.lua
yay packer
v
wired
add wired
clear
v
clear
cd
n
n
man stow
yay fzf-tab
n
cd .dotfiles
gs
stow .
n
n
stow .
n
stow .
n
stow .
n
stow .
n
yay fzf-tab
v
n
cd /usr/share/zsh/plugins/
n
v
add tree-sitter
add npm
clear
v
add tar curl
clear
add gcc
clear
cd .config/nvim/after/
v
cd .dotfiles
gs
gs
clear
lsblk
sudo mount /dev/sda1 /mnt
n
add wbg
yay wbg
cear
clear
wbg
cd .config/river
v
wbg wallpaper/downloads/uplspash_sky_1.jpg
n
kdeconnect-app
cd .config/river
v
n
mkdir $HOME/.ssh\

ssh-keygen -t rsa -b 4096 -C daisonthms@gmail.com\

eval "$(ssh-agent -s)"\

ssh-add ~/.ssh/id_rsa\

cat ~/.ssh/id_rsa.pub\

clear
cat ~/.ssh/id_rsa.pub > test.md
v test.md
rm test.md
ssh -T git@github.com\

cd .dotfiles
  git remote set-url origin git@github.com:daisonth/.dotfiles.git\

gs
ga -u
gs
ga .config/nvim
gs
ga .stow-local-ignore
gs
gc -m "new install update"
gp
git config --global user.email "daisonthms@gmail.com\
"
git config --global user.name "Daison"
gs
gc -m "new install update"
gp
cd .dotfiles
ll
gs
cd .dotfiles
ll
n
wired
add wired
yay wired
rustup default stable
yay -S wired
v
neofetch
fzf-tab
yay fzf-tab
n
cd /usr/share
n
cd zsh
n
cat .gitconfig
clear
v .zshrc
v .zshrc
v .zshrc
v .zshrc
cd .config/alacritty/nvim
cd .config/nvim
v
n
tt
clear
curl wttr.in/680308\

curl wttr.in/680308\

clear
v .zshrc
weather
clear
n
weather
clear
weather
clear
cdn
fcd
ll
clear
neofetch
clear
n
cd .dot
cd .dotfiles
gs
ga .gitconfig
gs
ga -u
gs
gc -m "new update"
gp
pipewire
cal
pactl
add pipewire
add pipewire-pulse
add pipewire-alsa
systemctl --user status pipewire.service
systemctl --user enable pipewire.service
systemctl --user start pipewire.service
systemctl --user status pipewire-pulse.service
systemctl --user status pipewire.service
systemctl --user enable pipewire-pulse.service
systemctl --user start pipewire-pulse.service
systemctl --user status pipewire.service
add seatd
clear
n
systemctl --user status pipewire.service
systemctl --user enable wireplumber@.service
systemctl --user status pipewire-pulse.service
add libspa-dbus.so
wireplumber
cd .config/river
v
wireplumber
cmcli
nmcli
clear
nmcli
nmcli device show
nmcli device connect wlan0
man nmcli
nmcli device wifi list ifname wlan0
nmcli device wifi connect GNXS-3C11A8 password 1234567890
ll
n
cd .dotfiles
gs
ga -u
gs
cd
v
lsblk
clear
river
river
river
ricer
river
river
river
river
poweroff
ll
cd .dotfiles
ll
gs
ga -u
gs
btop
s
river
lsblk
clear
neofetch
clear
ll
lla
clear
neofetch
clear
cmatrix
wireplumber
clear
systemctl --user status pipewire-pulse.service
systemctl --user status pipewire.service
systemctl --user start pipewire.service
systemctl --user status pipewire.service
systemctl --user start pipewire.service
systemctl --user status pipewire-pulse.service
systemctl --user start pipewire-pulse.service
wireplumber
neofetch
clear
wireplumber
exec pipewire
qqexit
exit
n
sudo chown -R daison .dotfiles
sudo chown -R daison .config
ll
ls
clear
lla
v .gitconfig
sudo chown -r daison .
ll
sudo chown -R daison .
ll
clear
lla
clear
n
remove nnn
ls
clear
yay nnn
n
su
exit
